version: '3.9'
services:
  server: 
    build: ./server
    container_name: server_backend
    ports: 
      - '3000:3000'
  
  client: 
    build: ./client
    container_name: server_frontend
    network_mode: host
    depends_on:
      - server
  
  gateway:
    image: php:7.2-apache
    ports:
      - "8081:80"
    volumes:
      - ./client/gateway:/var/www/html
    networks:
      - app-network

  sub:
    image: php:7.2-apache
    volumes:
      - ./client/sub:/var/www/html
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./wwwroot/nginx.conf:/etc/nginx/nginx.conf
      - ./wwwroot/ssl:/etc/nginx/ssl
    depends_on:
      - gateway
      - sub
    networks:
      - app-network

  database:
    image: postgres:alpine3.19
    container_name: db
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=admin
      - POSTGRES_DB=fotondb
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - foton-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - postgres

volumes:
  foton-data:

networks:
  postgres:
    driver: bridge
  app-network:
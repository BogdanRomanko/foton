version: '3.8'
services:
  server:
    build: ./server
    depends_on:
      - database
    networks:
      - app


  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      - app

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./wwwroot/nginx.conf:/etc/nginx/nginx.conf
      - ./wwwroot/ssl:/etc/nginx/ssl
    depends_on:
      - server
      - client
    networks:
      - app


  database:
    image: postgres:alpine3.19
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=admin
      - POSTGRES_DB=fotondb
    volumes:
      - foton-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - app

volumes:
  foton-data:

networks:
  app: